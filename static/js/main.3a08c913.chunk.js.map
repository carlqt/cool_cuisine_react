{"version":3,"sources":["Requests/apiRoutes.js","App/Root/index.js","Store/Menu/actions.js","Store/Cart/actions.js","App/Menu/listItem.js","App/Menu/list.js","App/Menu/cartDrawer.js","App/Menu/menu.js","App/Menu/index.js","App/index.js","serviceWorker.js","Store/Meal/reducer.js","Store/Cart/reducer.js","Store/index.js","index.js"],"names":["baseURL","Root","react_default","a","createElement","react_router","to","Component","apiRoutes","getMenu","concat","cartUrl","loadCart","data","type","addToCartAC","item","removeFromCartAC","withStyles","theme","container","minHeight","props","id","imageUrl","name","classes","description","addToCart","quantity","price","Grid_default","className","xs","Card_default","card","CardActionArea_default","actionArea","CardMedia_default","component","height","src","CardContent_default","Typography_default","variant","CardActions_default","Button_default","onClick","color","amountWithCurrency","List","renderItem","index","_this$props","_this","_meals$byID$Number","meals","byID","Number","listItem","Object","assign","key","_this$props2","this","spacing","allID","map","PureComponent","padding","CartDrawer","priceReducer","mem","val","priceAmount","amount","removeFromCart","renderCartItems","ListItem_default","button","RemoveCircle_default","ListItemText_default","primary","cartItems","closeDrawer","open","totalPrice","reduce","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","IconButton_default","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","grow","React","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","menuButton","marginLeft","hide","flexShrink","objectSpread","alignItems","mixins","toolbar","justifyContent","flexGrow","withTheme","Menu","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openCartDrawer","setState","produce","draft","displayCartDrawer","closeCartDrawer","cart","cartStore","mealStore","mealID","mealId","meal","state","cartCount","AppBar_default","position","Toolbar_default","aria-label","Badge_default","badgeContent","ShoppingCart_default","list","cartDrawer","backgroundColor","flex","mapDispatchToProps","url","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","jsonResponse","wrap","_context","prev","next","fetch","sent","json","stop","_x","apply","arguments","method","headers","Content-Type","body","JSON","stringify","_ref2","_callee2","urlId","options","_context2","_x2","connect","App","react_router_dom","exact","path","Boolean","window","location","hostname","match","initialState","reduceMeals","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","length","undefined","action","idx","findIndex","filter","e","keys","createStore","applyMiddleware","thunk","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a08c913.chunk.js","sourcesContent":["let baseURL;\n\nif (process.env.NODE_ENV === 'production') {\n  baseURL = \"https://sheltered-river-82974.herokuapp.com\"\n} else {\n  baseURL = \"http://localhost:8000\"\n}\n\nconst getMenu = `${baseURL}/menu`\nconst cartUrl = `${baseURL}/cart_items`\n\nexport default {\n  getMenu,\n  cartUrl,\n}\n\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router'\n\nclass Root extends Component {\n  render() {\n    return (\n      <Redirect to=\"/menu\" />\n    );\n  }\n}\n\nexport default Root;\n\n","import apiRoutes from 'Requests/apiRoutes';\n\nexport function getMenu() {\n  const url = `${apiRoutes.getMenu}`;\n\n  return async (dispatch) => {\n    const response = await fetch(url);\n    const jsonResponse = await response.json();\n\n    dispatch(\n      loadMeals(jsonResponse.data.meals)\n    );\n\n    dispatch(\n      loadCart(jsonResponse.data.cart)\n    );\n  }\n}\n\nfunction loadMeals(data) {\n  return {\n    type: 'LOAD_MEALS',\n    data: data,\n  }\n}\n\nfunction loadCart(data) {\n  return {\n    type: 'LOAD_CART',\n    data: data,\n  }\n}\n\n","import apiRoutes from 'Requests/apiRoutes';\n\nexport function addToCart(item) {\n  return async (dispatch) => {\n    const data = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    }\n\n    const response = await fetch(apiRoutes.cartUrl, data);\n    const jsonResponse = await response.json();\n\n    // dispatch only on successful response\n    dispatch(\n      addToCartAC(item)\n    );\n  }\n}\n\nexport function removeFromCart(item) {\n  return async (dispatch) => {\n    const urlId = item.id;\n    const url = `${apiRoutes.cartUrl}/${urlId}`\n    const options = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n    }\n\n    const response = await fetch(url, options);\n    const jsonResponse = await response.json();\n\n    dispatch(\n      removeFromCartAC(item)\n    );\n  }\n}\n\nfunction addToCartAC(item) {\n  return {\n    type: 'ADD_TO_CART',\n    data: item,\n  }\n}\n\nfunction removeFromCartAC(item) {\n  return {\n    type: 'REMOVE_FROM_CART',\n    data: item,\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Button from '@material-ui/core/Button';\n\nconst ListItem = (props) => {\n  const {\n    id,\n    imageUrl,\n    name,\n    classes,\n    description,\n    addToCart,\n    quantity,\n    price,\n  } = props;\n\n  const onClick = () => {\n    addToCart({\n      id,\n      imageUrl,\n      name,\n      description,\n      quantity,\n    });\n  }\n\n  return (\n    <Grid className={classes.container} item xs={3}>\n      <Card className={classes.card}>\n        <CardActionArea className={classes.actionArea}>\n          <CardMedia\n            component=\"img\"\n            height=\"200\"\n            src={imageUrl}\n          />\n          <CardContent>\n            <Typography variant=\"h6\" component=\"h2\">\n              { name }\n            </Typography>\n            <Typography component=\"p\">\n              { description }\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            variant=\"outlined\"\n            onClick={onClick}\n          >\n              Add to cart\n          </Button>\n          <Typography variant=\"h6\" color=\"secondary\">\n            { price.amountWithCurrency }\n          </Typography>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nconst styles = theme => ({\n  container: {\n    minHeight: 400,\n  },\n});\n\nexport default withStyles(styles)(ListItem);\n","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ListItem from './listItem';\n\nclass List extends PureComponent {\n  renderItem = (id, index) => {\n    const {\n      addToCart,\n      data: { meals },\n    } = this.props;\n\n    const {\n      price,\n      name,\n      description,\n      quantity,\n      imageUrl,\n    } = meals.byID[Number(id)];\n\n    return (\n      <ListItem key={id}\n        {...{\n          price,\n          addToCart,\n          name,\n          description,\n          imageUrl,\n          id,\n          quantity,\n        }}\n      />\n    )\n  }\n\n  render() {\n    const  { classes, data } = this.props;\n    const { meals } = data;\n\n    return (\n      <Grid container className={classes.container} spacing={8}>\n        { meals.allID.map(this.renderItem) }\n      </Grid>\n    );\n  }\n}\n\nconst styles = theme => ({\n  container: {\n    padding: 20,\n  }\n});\n\nexport default withStyles(styles)(List);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RemoveIcon from '@material-ui/icons/RemoveCircle';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nclass CartDrawer extends React.Component {\n  priceReducer = (mem, val) => {\n    const { price } = val;\n    const priceAmount = price.amount || 0;\n\n    return mem + Number(priceAmount);\n  }\n\n  removeFromCart = (item) => {\n    const { removeFromCart } = this.props;\n    removeFromCart(item);\n  }\n\n  renderCartItems = (item) => {\n    return (\n      <ListItem button key={item.id}>\n        <RemoveIcon onClick={() => this.removeFromCart(item)} />\n        <ListItemText primary={item.name} />\n        x { item.quantity }\n      </ListItem>\n    )\n  }\n\n  render() {\n    const {\n      cartItems,\n      classes,\n      closeDrawer,\n      theme,\n      open,\n    } = this.props;\n\n    const totalPrice = cartItems.reduce(this.priceReducer, 0);\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={closeDrawer}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          { cartItems.map(this.renderCartItems) }\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <ListItemText className={classes.grow} primary=\"Total Price: \" />\n            <ListItemText primary={`$${totalPrice}`} />\n          </ListItem>\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nCartDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CartDrawer);\n\n","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CartIcon from '@material-ui/icons/ShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport produce from 'immer';\nimport List from './list';\nimport CartDrawer from './cartDrawer';\n\nimport 'typeface-roboto';\n\nclass Menu extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayCartDrawer: false,\n    }\n  }\n\n  componentDidMount() {\n    const { getMenu } = this.props;\n    getMenu();\n  }\n\n  quantity = (mem, val) => (\n    mem + val.quantity\n  )\n\n  openCartDrawer = () => {\n    this.setState(\n      produce(draft => {\n        draft.displayCartDrawer = true\n      })\n    )\n  }\n\n  closeCartDrawer = () => {\n    this.setState(\n      produce(draft => {\n        draft.displayCartDrawer = false\n      })\n    )\n  }\n\n  cartItems = () => {\n    const {\n      cartStore: cart,\n      mealStore: { meals },\n    } = this.props;\n\n    return cart.map(item => {\n      const mealID = Number(item.mealId);\n      const meal = meals.byID[mealID];\n\n      return {\n        ...meal,\n        quantity: item.quantity,\n      }\n    })\n  }\n\n  render() {\n    const {\n      addToCart,\n      removeFromCart,\n      classes,\n      cartStore: cart,\n      mealStore: meals,\n    } = this.props;\n\n    const { displayCartDrawer } = this.state;\n    const cartCount = cart.reduce(this.quantity, 0);\n    const cartItems = this.cartItems();\n\n    return (\n      <div className={classes.container}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Meals\n            </Typography>\n            <IconButton\n              onClick={this.openCartDrawer}\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <Badge badgeContent={cartCount} color=\"secondary\">\n                <CartIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <List\n          {...{ addToCart }}\n          data={meals}\n        />\n\n        <CartDrawer\n          {...{ cartItems, removeFromCart }}\n          open={displayCartDrawer}\n          closeDrawer={this.closeCartDrawer}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  container: {\n    backgroundColor: '#eeeeee',\n    flex: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nexport default withStyles(styles)(Menu);\n","import { connect } from 'react-redux';\nimport { getMenu } from 'Store/Menu/actions';\nimport { addToCart, removeFromCart } from 'Store/Cart/actions';\n\nimport Menu from './menu';\n\nconst mapStateToProps = state => ({\n  mealStore: state.mealStore,\n  cartStore: state.cartStore.cart,\n});\n\nconst mapDispatchToProps = {\n  getMenu,\n  addToCart,\n  removeFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Root from './Root';\nimport Menu from './Menu';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"routerContainer\">\n          <Route exact path=\"/\" component={Root} />\n          <Switch>\n            <Route exact path=\"/menu\" component={Menu} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { produce } from 'immer';\n\nconst initialState = {\n  meals: {\n    byID: {},\n    allID: [],\n  }\n};\n\nexport default function (state = initialState, action) {\n  const { data, type } = action;\n\n  switch (type) {\n    case 'LOAD_MEALS': {\n      const meals = data.reduce(reduceMeals, {});\n\n      return produce(state, draft => {\n        draft.meals.byID = {...meals};\n        draft.meals.allID = Object.keys(meals);\n      });\n    }\n    case 'RESET': {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction reduceMeals(mem, val) {\n  mem[val.id] = val;\n  return mem;\n}\n","import { produce } from 'immer';\n\nconst initialState = {\n  cart: []\n};\n\nexport default function (state = initialState, action) {\n  const { data, type } = action;\n\n  switch (type) {\n    case 'LOAD_CART': {\n      return produce(state, draft => {\n        draft.cart = data;\n      })\n    }\n    case 'ADD_TO_CART': {\n      return produce(state, draft => {\n        const idx = draft.cart.findIndex(item => item.mealId=== Number(data.id))\n\n        if (idx >= 0) {\n          draft.cart[idx].quantity = draft.cart[idx].quantity + 1;\n        } else {\n          draft.cart = draft.cart.concat({quantity: 1, mealId: Number(data.id)});\n        }\n      })\n    }\n    case 'REMOVE_FROM_CART': {\n      return produce(state, draft => {\n        draft.cart = draft.cart.filter(e => e.mealId !== data.id);\n      })\n    }\n    case 'RESET': {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport mealReducer from 'Store/Meal/reducer';\nimport cartReducer from 'Store/Cart/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst combinedReducers = combineReducers({\n  cartStore: cartReducer,\n  mealStore: mealReducer,\n});\n\nexport default createStore(combinedReducers, composeEnhancers(applyMiddleware(thunk)));\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from 'Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}